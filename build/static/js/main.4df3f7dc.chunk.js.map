{"version":3,"sources":["actions/actionTypes.js","actions/obstaclesActions.js","reducers/grid.js","reducers/obstacles.js","common/constants.js","common/helpers.js","reducers/helpers/roverHelpers.js","reducers/rover.js","reducers/index.js","components/library/Input.js","components/InstructionsForm.js","actions/roverActions.js","components/library/Button.js","components/RandomObstacleButton.js","components/LogObstacles.js","components/Actions.js","components/Description.js","components/Grid.js","components/LogPosition.js","components/Title.js","pages/Home.js","store/index.js","index.js"],"names":["ROVER_CLEAR","ROVER_CLEAR_POSITION_LOG","ROVER_DELETE_OBSTACLE","ROVER_NEW_INSTRUCTIONS","ROVER_NEW_MOVE","ROVER_SET_OBSTACLES","ROVER_SET_POSITION","createObstacles","obstacles","type","payload","defaultState","x","y","grid","state","action","obstacle","newState","obstacleIndex","findIndex","splice","KEYBOARDS_CODES","ROVER_DIRECTION","ROVER_MOVEMENT","F","L","R","isObstacleCoordinates","obstaclesCoordinates","newPosition","getDirectionArrow","direction","getNewObstaclesCoordinates","roverPosition","newObstacleCoordinate","getRandomRoverPosition","getRandomCoordinates","numberOfObstacles","coordinates","i","newX","Math","floor","random","newY","push","Set","getRoverMovementFromCode","code","getObstacleFound","getStateCheckingMovement","newDirection","isObstacle","isInsideGrid","isCoordinateInsideGrid","isCorrectMovement","current","log","getNewRoverState","roverMovement","reducers","rover","instructions","instructionsArray","forEach","instruction","toUpperCase","position","getGrid","getObstacles","getRover","combineReducers","Input","React","forwardRef","props","ref","StyledInput","styled","getStylesBasedOnType","StyledInstructionsForm","className","roverNewInstructionsMove","inputRef","useRef","handleFormSubmit","useCallback","event","preventDefault","target","value","onSubmit","htmlFor","name","id","placeholder","connect","StyledButton","children","otherProps","handleCreateRandomObstacle","onClick","StyledLogObstacles","deleteObstacle","handleDeleteObstacle","length","map","styledActions","StyledDescription","StyledGrid","gridItems","columns","rows","rowsI","obstaclesAvailable","columnsI","rowItems","xCoordinate","yCoordinate","isRoverPosition","renderGrid","item","getLogText","StyledLogPosition","roverClearPositionLog","handleClearLog","StyledTitle","StyledHome","roverClear","roverNewKeyboardMove","roverSetPosition","useEffect","eventListener","document","addEventListener","removeEventListener","configureStore","enhancers","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","composedEnhancers","compose","applyMiddleware","thunk","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4df3f7dc.chunk.js","sourcesContent":["export const ROVER_CLEAR = 'ROVER@CLEAR';\nexport const ROVER_CLEAR_POSITION_LOG = 'ROVER@CLEAR_POSITION_LOG';\nexport const ROVER_DELETE_OBSTACLE = 'ROVER@DELETE_OBSTACLE';\nexport const ROVER_NEW_INSTRUCTIONS = 'ROVER@NEW_INSTRUCTIONS';\nexport const ROVER_NEW_MOVE = 'ROVER@NEW_MOVE';\nexport const ROVER_SET_GRID = 'ROVER@SET_GRID';\nexport const ROVER_SET_OBSTACLES = 'ROVER@SET_OBSTACLES';\nexport const ROVER_SET_POSITION = 'ROVER@SET_POSITION';\n","import { ROVER_DELETE_OBSTACLE, ROVER_SET_OBSTACLES } from './actionTypes';\n\nexport const createObstacles = obstacles => ({\n  type: ROVER_SET_OBSTACLES,\n  payload: {\n    obstacles,\n  },\n});\n\nexport const deleteObstacle = obstacle => ({\n  type: ROVER_DELETE_OBSTACLE,\n  payload: {\n    obstacle,\n  },\n});\n","import { ROVER_CLEAR } from '../actions/actionTypes';\n\nconst defaultState = { x: 50, y: 25 };\n\nconst grid = (state = defaultState, action) => {\n  switch (action.type) {\n    case ROVER_CLEAR:\n      return defaultState;\n\n    default:\n      return state;\n  }\n};\n\nexport default grid;\n","import {\n  ROVER_CLEAR,\n  ROVER_DELETE_OBSTACLE,\n  ROVER_SET_OBSTACLES,\n} from '../actions/actionTypes';\n\nconst defaultState = [];\n\nconst grid = (state = defaultState, action) => {\n  switch (action.type) {\n    case ROVER_CLEAR:\n      return defaultState;\n\n    case ROVER_DELETE_OBSTACLE: {\n      const { obstacle } = action.payload;\n\n      const newState = [...state];\n      const obstacleIndex = newState.findIndex(\n        ({ x, y }) => x === obstacle.x && y === obstacle.y\n      );\n\n      newState.splice(obstacleIndex, 1);\n\n      return newState;\n    }\n\n    case ROVER_SET_OBSTACLES: {\n      const { obstacles } = action.payload;\n      return [...state, ...obstacles];\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default grid;\n","export const INITIAL_OBSTACLES = 50;\n\nexport const KEYBOARDS_CODES = {\n  A: 'KeyA',\n  D: 'KeyD',\n  W: 'KeyW',\n};\n\nexport const ROVER_DIRECTION = {\n  N: 'north',\n  S: 'south',\n  E: 'east',\n  W: 'west',\n};\n\nexport const ROVER_MOVEMENT = {\n  F: 'front',\n  L: 'left',\n  R: 'right',\n};\n","import React from 'react';\nimport { KEYBOARDS_CODES, ROVER_DIRECTION, ROVER_MOVEMENT } from './constants';\n\nconst isCoordinateInsideGrid = (grid, newPosition) =>\n  newPosition.x >= 0 &&\n  newPosition.x <= grid.x &&\n  newPosition.y >= 0 &&\n  newPosition.y <= grid.y;\n\nconst isObstacleCoordinates = (obstaclesCoordinates, newPosition) =>\n  obstaclesCoordinates.findIndex(\n    obstacle => obstacle.x === newPosition.x && obstacle.y === newPosition.y\n  ) !== -1;\n\nexport const getDirectionArrow = direction => {\n  switch (direction) {\n    case ROVER_DIRECTION.W:\n      return <span>&#8592;</span>;\n\n    case ROVER_DIRECTION.E:\n      return <span>&#8594;</span>;\n\n    case ROVER_DIRECTION.S:\n      return <span>&#8595;</span>;\n\n    case ROVER_DIRECTION.N:\n    default:\n      return <span>&#8593;</span>;\n  }\n};\n\nexport const getNewObstaclesCoordinates = (\n  grid,\n  roverPosition,\n  obstaclesCoordinates\n) => {\n  const newObstacleCoordinate = getRandomRoverPosition(\n    grid,\n    obstaclesCoordinates\n  );\n  const isRoverPosition =\n    newObstacleCoordinate.x === roverPosition.x &&\n    newObstacleCoordinate.y === roverPosition.y;\n\n  if (isRoverPosition) {\n    return getNewObstaclesCoordinates(\n      grid,\n      roverPosition,\n      obstaclesCoordinates\n    );\n  }\n\n  return [newObstacleCoordinate];\n};\n\nexport const getRandomCoordinates = ({ x, y }, numberOfObstacles = 1) => {\n  const coordinates = [];\n  let i = 0;\n\n  for (i; i < numberOfObstacles; i++) {\n    const newX = Math.floor(Math.random() * (x - 0));\n    const newY = Math.floor(Math.random() * (y - 0));\n    const existingObstacle = coordinates.findIndex(\n      obstacle => obstacle.x === newX && obstacle.y === newY\n    );\n\n    if (existingObstacle === -1) {\n      coordinates.push({\n        x: newX,\n        y: newY,\n      });\n    } else {\n      numberOfObstacles = numberOfObstacles + 1;\n    }\n  }\n\n  return [...new Set(coordinates)];\n};\n\nexport const getRandomRoverPosition = (grid, obstaclesCoordinates) => {\n  const roverPosition = getRandomCoordinates(grid)[0];\n  const isObstacle = isObstacleCoordinates(obstaclesCoordinates, roverPosition);\n\n  if (isObstacle) {\n    return getRandomRoverPosition(grid, obstaclesCoordinates);\n  }\n\n  return roverPosition;\n};\n\nexport const getRoverMovementFromCode = code => {\n  switch (code) {\n    case KEYBOARDS_CODES.A:\n      return ROVER_MOVEMENT.L;\n    case KEYBOARDS_CODES.D:\n      return ROVER_MOVEMENT.R;\n    case KEYBOARDS_CODES.W:\n      return ROVER_MOVEMENT.F;\n    default:\n      return null;\n  }\n};\n\nexport const isCorrectMovement = ({\n  obstaclesCoordinates,\n  newPosition,\n  grid,\n}) => {\n  const isObstacle = isObstacleCoordinates(obstaclesCoordinates, newPosition);\n  const isInsideGrid = isCoordinateInsideGrid(grid, newPosition);\n\n  return !isObstacle && isInsideGrid;\n};\n","import { ROVER_DIRECTION, ROVER_MOVEMENT } from '../../common/constants';\nimport { isCorrectMovement } from '../../common/helpers';\n\nconst getObstacleFound = ({ x, y }) => `Obstacle - X ${x}, Y ${y}`;\n\nconst getStateCheckingMovement = ({\n  grid,\n  obstaclesCoordinates,\n  newDirection,\n  newPosition,\n  state,\n}) => {\n  if (isCorrectMovement({ grid, obstaclesCoordinates, newPosition })) {\n    return {\n      current: newPosition,\n      direction: newDirection,\n      log: [state.current, ...state.log],\n    };\n  }\n  return { ...state, log: [getObstacleFound(newPosition), ...state.log] };\n};\n\nexport const getNewRoverState = ({\n  current,\n  direction,\n  grid,\n  obstaclesCoordinates,\n  roverMovement,\n  state,\n}) => {\n  const newPosition = { ...current };\n  switch (roverMovement) {\n    case ROVER_MOVEMENT.F: {\n      switch (direction) {\n        case ROVER_DIRECTION.N: {\n          newPosition.y = newPosition.y + 1;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection: direction,\n            newPosition,\n            state,\n          });\n        }\n        case ROVER_DIRECTION.S: {\n          newPosition.y = newPosition.y - 1;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection: direction,\n            newPosition,\n            state,\n          });\n        }\n        case ROVER_DIRECTION.W: {\n          newPosition.x = newPosition.x - 1;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection: direction,\n            newPosition,\n            state,\n          });\n        }\n        case ROVER_DIRECTION.E: {\n          newPosition.x = newPosition.x + 1;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection: direction,\n            newPosition,\n            state,\n          });\n        }\n        default:\n          return state;\n      }\n    }\n    case ROVER_MOVEMENT.L:\n      switch (direction) {\n        case ROVER_DIRECTION.N: {\n          newPosition.x = newPosition.x - 1;\n          const newDirection = ROVER_DIRECTION.W;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection,\n            newPosition,\n            state,\n          });\n        }\n        case ROVER_DIRECTION.S: {\n          newPosition.x = newPosition.x + 1;\n          const newDirection = ROVER_DIRECTION.E;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection,\n            newPosition,\n            state,\n          });\n        }\n        case ROVER_DIRECTION.W: {\n          newPosition.y = newPosition.y - 1;\n          const newDirection = ROVER_DIRECTION.S;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection,\n            newPosition,\n            state,\n          });\n        }\n        case ROVER_DIRECTION.E: {\n          newPosition.y = newPosition.y + 1;\n          const newDirection = ROVER_DIRECTION.N;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection,\n            newPosition,\n            state,\n          });\n        }\n        default:\n          return state;\n      }\n    case ROVER_MOVEMENT.R:\n      switch (direction) {\n        case ROVER_DIRECTION.N: {\n          newPosition.x = newPosition.x + 1;\n          const newDirection = ROVER_DIRECTION.E;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection,\n            newPosition,\n            state,\n          });\n        }\n        case ROVER_DIRECTION.S: {\n          newPosition.x = newPosition.x - 1;\n          const newDirection = ROVER_DIRECTION.W;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection,\n            newPosition,\n            state,\n          });\n        }\n        case ROVER_DIRECTION.W: {\n          newPosition.y = newPosition.y + 1;\n          const newDirection = ROVER_DIRECTION.N;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection,\n            newPosition,\n            state,\n          });\n        }\n        case ROVER_DIRECTION.E: {\n          newPosition.y = newPosition.y - 1;\n          const newDirection = ROVER_DIRECTION.S;\n          return getStateCheckingMovement({\n            grid,\n            obstaclesCoordinates,\n            newDirection,\n            newPosition,\n            state,\n          });\n        }\n        default:\n          return state;\n      }\n    default:\n      return state;\n  }\n};\n","import {\n  ROVER_CLEAR,\n  ROVER_CLEAR_POSITION_LOG,\n  ROVER_NEW_INSTRUCTIONS,\n  ROVER_NEW_MOVE,\n  ROVER_SET_POSITION,\n} from '../actions/actionTypes';\n\nimport { ROVER_DIRECTION, ROVER_MOVEMENT } from '../common/constants';\nimport { getRoverMovementFromCode } from '../common/helpers';\nimport { getNewRoverState } from './helpers/roverHelpers';\n\nconst defaultState = {\n  current: null,\n  direction: ROVER_DIRECTION.N,\n  log: [],\n};\n\nconst rover = (state = defaultState, action) => {\n  switch (action.type) {\n    case ROVER_CLEAR:\n      return defaultState;\n\n    case ROVER_CLEAR_POSITION_LOG:\n      return { ...state, log: [] };\n\n    case ROVER_NEW_INSTRUCTIONS: {\n      const { instructions, grid, obstaclesCoordinates } = action.payload;\n      const instructionsArray = [...instructions];\n      let newState = { ...state };\n\n      instructionsArray.forEach(instruction => {\n        const roverMovement = ROVER_MOVEMENT[instruction.toUpperCase()];\n        const { current, direction } = newState;\n        if (roverMovement) {\n          newState = getNewRoverState({\n            current,\n            direction,\n            grid,\n            obstaclesCoordinates,\n            roverMovement,\n            state: newState,\n          });\n        }\n      });\n      return newState;\n    }\n\n    case ROVER_NEW_MOVE: {\n      const { code, grid, obstaclesCoordinates } = action.payload;\n      const roverMovement = getRoverMovementFromCode(code);\n      const { current, direction } = state;\n\n      return getNewRoverState({\n        current,\n        direction,\n        grid,\n        obstaclesCoordinates,\n        roverMovement,\n        state,\n      });\n    }\n\n    case ROVER_SET_POSITION: {\n      const { position } = action.payload;\n      const log = state.current\n        ? [...state.log, state.current, position]\n        : [...state.log];\n\n      return {\n        ...state,\n        current: position,\n        log,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default rover;\n","import { combineReducers } from 'redux';\n\nimport grid from './grid';\nimport obstacles from './obstacles';\nimport rover from './rover';\n\nconst reducers = {\n  grid,\n  obstacles,\n  rover,\n};\n\nexport const getGrid = state => state.grid;\nexport const getObstacles = state => state.obstacles;\nexport const getRover = state => state.rover;\n\nexport default combineReducers(reducers);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Input = React.forwardRef((props, ref) => <input {...props} ref={ref} />)\n\nconst getStylesBasedOnType = type => {\n  switch (type) {\n    case 'submit':\n    case 'reset':\n      return 'cursor: pointer;';\n    default:\n      return '';\n  }\n};\n\nconst StyledInput = styled(Input)`\n  ${({ type }) => getStylesBasedOnType(type)}\n`;\n\nexport default StyledInput;\n","import React, { useCallback, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { roverNewInstructionsMove } from '../actions/roverActions';\nimport { getGrid, getObstacles } from '../reducers';\n\nimport Input from './library/Input';\n\nconst InstructionsForm = ({\n  className,\n  roverNewInstructionsMove,\n  grid,\n  obstaclesCoordinates,\n}) => {\n  const inputRef = useRef(null);\n  const handleFormSubmit = useCallback(\n    event => {\n      event.preventDefault();\n      roverNewInstructionsMove({\n        grid,\n        instructions: event?.target?.instructions?.value,\n        obstaclesCoordinates,\n      });\n      inputRef.current.value = '';\n    },\n    [grid, obstaclesCoordinates, roverNewInstructionsMove]\n  );\n\n  return (\n    <form className={className} onSubmit={handleFormSubmit}>\n      <p>\n        <label htmlFor=\"instructions\">Rover Instructions:</label>\n        <Input\n          type=\"text\"\n          name=\"instructions\"\n          id=\"instructions\"\n          placeholder=\"Type Rover instructions\"\n          ref={inputRef}\n        />\n      </p>\n      <p>\n        <Input type=\"reset\" value=\"Reset\" />\n        <Input className=\"instructions-send\" type=\"submit\" value=\"Send\" />\n      </p>\n    </form>\n  );\n};\n\nconst StyledInstructionsForm = styled(InstructionsForm)`\n  .instructions-send {\n    margin-left: 15px;\n  }\n`;\n\nconst mapStateToProps = state => ({\n  grid: getGrid(state),\n  obstaclesCoordinates: getObstacles(state),\n});\n\nexport default connect(mapStateToProps, {\n  roverNewInstructionsMove,\n})(StyledInstructionsForm);\n","import {\n  ROVER_CLEAR,\n  ROVER_CLEAR_POSITION_LOG,\n  ROVER_NEW_INSTRUCTIONS,\n  ROVER_NEW_MOVE,\n  ROVER_SET_POSITION,\n} from './actionTypes';\n\nexport const roverClear = () => ({\n  type: ROVER_CLEAR,\n});\n\nexport const roverClearPositionLog = () => ({\n  type: ROVER_CLEAR_POSITION_LOG,\n});\n\nexport const roverNewInstructionsMove = ({\n  instructions,\n  grid,\n  obstaclesCoordinates,\n}) => ({\n  type: ROVER_NEW_INSTRUCTIONS,\n  payload: {\n    instructions,\n    grid,\n    obstaclesCoordinates,\n  },\n});\n\nexport const roverNewKeyboardMove = ({ code, grid, obstaclesCoordinates }) => ({\n  type: ROVER_NEW_MOVE,\n  payload: {\n    code,\n    grid,\n    obstaclesCoordinates,\n  },\n});\n\nexport const roverSetPosition = position => ({\n  type: ROVER_SET_POSITION,\n  payload: {\n    position,\n  },\n});\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = ({ children, ...otherProps }) => (\n  <button {...otherProps}>{children}</button>\n);\n\nconst StyledButton = styled(Button)`\n  cursor: pointer;\n`;\n\nexport default StyledButton;\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { createObstacles } from '../actions/obstaclesActions';\nimport { getGrid, getObstacles, getRover } from '../reducers';\n\nimport Button from './library/Button';\n\nimport { getNewObstaclesCoordinates } from '../common/helpers';\n\nconst RandomObstacleButton = ({\n  createObstacles,\n  grid,\n  obstaclesCoordinates,\n  rover: { current },\n}) => {\n  const handleCreateRandomObstacle = useCallback(\n    () =>\n      createObstacles(\n        getNewObstaclesCoordinates(grid, current, obstaclesCoordinates)\n      ),\n    [createObstacles, current, grid, obstaclesCoordinates]\n  );\n\n  return (\n    <Button onClick={handleCreateRandomObstacle}>Add random obstacle</Button>\n  );\n};\n\nconst mapStateToProps = state => ({\n  grid: getGrid(state),\n  obstaclesCoordinates: getObstacles(state),\n  rover: getRover(state),\n});\n\nexport default connect(mapStateToProps, { createObstacles })(\n  RandomObstacleButton\n);\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { deleteObstacle } from '../actions/obstaclesActions';\nimport { getObstacles } from '../reducers';\n\nimport Button from './library/Button';\n\nconst LogObstacles = ({ className, deleteObstacle, obstacles }) => {\n  const handleDeleteObstacle = useCallback(\n    obstacle => deleteObstacle(obstacle),\n    [deleteObstacle]\n  );\n\n  return (\n    <div className={className}>\n      <p>Total Obstacles {obstacles.length}:</p>\n      <div className=\"positions-container\">\n        {obstacles.map(({ x, y }) => (\n          <p key={`${x}-${y}`}>\n            x {x} / y {y}\n            <Button\n              className=\"delete-button\"\n              onClick={() => handleDeleteObstacle({ x, y })}\n            >\n              Delete\n            </Button>\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst StyledLogObstacles = styled(LogObstacles)`\n  .delete-button {\n    float: right;\n    margin-right: 10px;\n  }\n\n  .positions-container {\n    height: 225px;\n    overflow: auto;\n  }\n`;\n\nconst mapStateToProps = state => ({\n  obstacles: getObstacles(state),\n});\n\nexport default connect(mapStateToProps, { deleteObstacle })(StyledLogObstacles);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport InstructionsForm from './InstructionsForm';\nimport RandomObstacleButton from './RandomObstacleButton';\nimport LogObstacles from './LogObstacles';\n\nconst Actions = ({ className }) => (\n  <div className={className}>\n    <InstructionsForm />\n    <RandomObstacleButton />\n    <LogObstacles />\n  </div>\n);\n\nconst styledActions = styled(Actions)`\n  display: inline-block;\n  height: 416px;\n  overflow: hidden;\n  border: 1px solid black;\n  margin-left: 15px;\n  width: 200px;\n`;\n\nexport default styledActions;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Description = ({ className }) => (\n  <div className={className}>\n    <p>\n      You’re part of the team that explores Mars by sending remotely controlled\n      vehicles to the surface of the planet. We create a software that\n      translates the commands sent from earth to instructions that are\n      understood by the rover.\n    </p>\n    <p>\n      We can send instructions by keyboard one by one or sending a battery of it\n      with an input.\n    </p>\n    The rover can move:\n    <ul>\n      <li>\n        Forward: <b>F</b> in input or <b>W</b> on keyboard\n      </li>\n      <li>\n        Left: <b>L</b> in input or <b>A</b> on keyboard\n      </li>\n      <li>\n        Right: <b>R</b> in input or <b>D</b> on keyboard\n      </li>\n    </ul>\n    <p>\n      The rover will detect if there are an obstacle in the next movement, if\n      there is anything there it will move, if not, it will stay in the same\n      position and direction.\n    </p>\n    <p>\n      On the first load we generate randomly <b>50 obstacles</b> and the rover\n      position aswell, so everytime we refresh the page we will get different\n      grid configurations. At the same time, we add a button to add a random\n      obstacle everytime we click on it.\n    </p>\n    <p>\n      We can see in live in the grid the rover movement, and we have{' '}\n      <b>2 logs</b> to check the coordinates of obstacles and the rover historic\n      movement. At the same obstacle log, if you want, you can remove the\n      obstacle using the Delete button on each one.\n    </p>\n  </div>\n);\n\nconst StyledDescription = styled(Description)`\n  text-align: justify;\n`;\n\nexport default StyledDescription;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { getGrid, getObstacles, getRover } from '../reducers';\nimport { getDirectionArrow } from '../common/helpers';\n\nconst Grid = ({\n  className,\n  obstacles,\n  grid: { x, y },\n  rover: { current, direction },\n}) => {\n  const renderGrid = () => {\n    const gridItems = [];\n    const columns = x;\n    const rows = y;\n    let rowsI = 0;\n    const obstaclesAvailable = [...obstacles];\n    for (rowsI; rowsI <= rows; rowsI++) {\n      let columnsI = 0;\n      const rowItems = [];\n\n      for (columnsI; columnsI <= columns; columnsI++) {\n        const xCoordinate = columnsI;\n        const yCoordinate = rows - rowsI;\n        const id = `${xCoordinate}-${yCoordinate}`;\n        let isObstacle = false;\n        let isRoverPosition = false;\n\n        if (xCoordinate === current?.x && yCoordinate === current?.y) {\n          isRoverPosition = true;\n        } else if (obstaclesAvailable.length) {\n          const obstacleIndex = obstaclesAvailable.findIndex(\n            obstacle => obstacle.x === xCoordinate && obstacle.y === yCoordinate\n          );\n          if (obstacleIndex !== -1) {\n            isObstacle = true;\n            obstaclesAvailable.splice(obstacleIndex, 1);\n          }\n        }\n\n        rowItems.push(\n          <div\n            className={`grid-square ${\n              isRoverPosition\n                ? 'grid-square-rover'\n                : isObstacle\n                ? 'grid-square-obstacle'\n                : ''\n            }`}\n            id={id}\n            key={id}\n          >\n            {isRoverPosition ? getDirectionArrow(direction) : ''}\n          </div>\n        );\n      }\n\n      gridItems.push(\n        <div key={rowsI} className=\"grid-rows\">\n          {rowItems}\n        </div>\n      );\n    }\n\n    return gridItems;\n  };\n\n  return <div className={className}>{renderGrid().map(item => item)}</div>;\n};\n\nconst StyledGrid = styled(Grid)`\n  display: inline-block;\n\n  .grid-rows {\n    height: 16px;\n    margin: 0;\n\n    .grid-square {\n      border-top: 1px solid black;\n      border-right: 1px solid black;\n      display: inline-block;\n      width: 15px;\n      height: 15px;\n\n      &:first-child {\n        border-left: 1px solid black;\n      }\n      &-obstacle {\n        background-color: black;\n      }\n\n      &-rover {\n        background-color: green;\n      }\n    }\n  }\n\n  div:last-of-type .grid-square {\n    border-bottom: 1px solid black;\n  }\n`;\n\nconst mapStateToProps = state => ({\n  obstacles: getObstacles(state),\n  grid: getGrid(state),\n  rover: getRover(state),\n});\n\nexport default connect(mapStateToProps, {})(StyledGrid);\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { roverClearPositionLog } from '../actions/roverActions';\nimport { getRover } from '../reducers';\n\nimport Button from './library/Button';\n\nconst getLogText = position => {\n  if (typeof position === 'string') {\n    return position;\n  }\n  return `X ${position.x}, Y ${position.y}`;\n};\n\nconst LogPosition = ({\n  className,\n  rover: { current, direction, log },\n  roverClearPositionLog,\n}) => {\n  const handleClearLog = useCallback(roverClearPositionLog, [\n    roverClearPositionLog,\n  ]);\n\n  return (\n    <div className={className}>\n      {current && (\n        <p>\n          Current position:\n          <br />\n          <b>\n            X {current.x}, Y {current.y}\n          </b>\n        </p>\n      )}\n      <p>\n        Current direction: <b>{direction}</b>\n      </p>\n      <Button onClick={handleClearLog}>Clear Log</Button>\n      <p>Last positions: </p>\n      <div className=\"positions-container\">\n        {log.map((position, i) => (\n          <p key={i}>{getLogText(position)}</p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst StyledLogPosition = styled(LogPosition)`\n  display: inline-block;\n  height: 416px;\n  overflow: hidden;\n  border: 1px solid black;\n  margin-left: 30px;\n  width: 200px;\n\n  .delete-button {\n    float: right;\n    margin-right: 30px;\n  }\n\n  .positions-container {\n    height: 225px;\n    overflow: auto;\n  }\n`;\n\nconst mapStateToProps = state => ({\n  rover: getRover(state),\n});\n\nexport default connect(mapStateToProps, { roverClearPositionLog })(\n  StyledLogPosition\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Title = ({ className }) => (\n  <h1 className={className}>Mars Rover Mission</h1>\n);\n\nconst StyledTitle = styled(Title)`\n  margin: 0 0 30px;\n`;\n\nexport default StyledTitle;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport {\n  roverClear,\n  roverNewKeyboardMove,\n  roverSetPosition,\n} from '../actions/roverActions';\nimport { createObstacles } from '../actions/obstaclesActions';\nimport { getGrid, getObstacles } from '../reducers';\n\nimport Actions from '../components/Actions';\nimport Description from '../components/Description';\nimport Grid from '../components/Grid';\nimport LogPosition from '../components/LogPosition';\nimport Title from '../components/Title';\n\nimport {\n  getRandomCoordinates,\n  getRandomRoverPosition,\n} from '../common/helpers';\nimport { INITIAL_OBSTACLES, KEYBOARDS_CODES } from '../common/constants';\n\nconst Home = ({\n  className,\n  createObstacles,\n  grid,\n  obstaclesCoordinates,\n  roverClear,\n  roverNewKeyboardMove,\n  roverSetPosition,\n}) => {\n  useEffect(() => {\n    const obstaclesCoordinates = getRandomCoordinates(grid, INITIAL_OBSTACLES);\n    const roverPosition = getRandomRoverPosition(grid, obstaclesCoordinates);\n    createObstacles(obstaclesCoordinates);\n    roverSetPosition(roverPosition);\n  }, [createObstacles, grid, roverSetPosition]);\n\n  useEffect(() => {\n    const eventListener = event => {\n      const { code } = event;\n      switch (code) {\n        case KEYBOARDS_CODES.A:\n        case KEYBOARDS_CODES.D:\n        case KEYBOARDS_CODES.W:\n          return roverNewKeyboardMove({ code, grid, obstaclesCoordinates });\n        default:\n          return null;\n      }\n    };\n    document.addEventListener('keydown', eventListener);\n    return () => document.removeEventListener('keydown', eventListener);\n  }, [grid, obstaclesCoordinates, roverNewKeyboardMove]);\n\n  useEffect(() => {\n    return () => {\n      roverClear();\n    };\n  }, [roverClear]);\n\n  return (\n    <div className={className}>\n      <header>\n        <Title />\n      </header>\n      <section>\n        <Description />\n      </section>\n      <main className=\"obstacles-container\">\n        <Grid />\n        <LogPosition />\n        <Actions />\n      </main>\n    </div>\n  );\n};\n\nconst StyledHome = styled(Home)`\n  padding: 50px;\n  text-align: center;\n\n  main {\n    margin-top: 15px;\n  }\n`;\n\nconst mapStateToProps = state => ({\n  grid: getGrid(state),\n  obstaclesCoordinates: getObstacles(state),\n});\n\nexport default connect(mapStateToProps, {\n  createObstacles,\n  roverClear,\n  roverNewKeyboardMove,\n  roverSetPosition,\n})(StyledHome);\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\n\nconst configureStore = () => {\n  const initialState = {};\n  const enhancers = [];\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension({ name: '- ROVER MARS -' }));\n  }\n\n  const composedEnhancers = compose(applyMiddleware(thunk), ...enhancers);\n\n  const store = createStore(reducers, initialState, composedEnhancers);\n\n  return { store };\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport Home from './pages/Home';\n\nimport configureStore from './store';\n\nimport './index.css';\n\nconst { store } = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Home />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}